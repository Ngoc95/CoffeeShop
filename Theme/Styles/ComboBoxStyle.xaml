<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:internal="clr-namespace:MaterialDesignThemes.Wpf.Internal;assembly=MaterialDesignThemes.Wpf"
    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf">


    <Style x:Key="MaterialDesignExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ContentControl Content="{Binding (wpf:ExpanderAssist.ExpanderButtonContent), RelativeSource={RelativeSource AncestorType={x:Type Expander}, Mode=FindAncestor}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding (wpf:ExpanderAssist.ExpanderButtonContent), RelativeSource={RelativeSource AncestorType={x:Type Expander}, Mode=FindAncestor}}" Value="{x:Null}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="Transparent">
                                <wpf:PackIcon x:Name="ExpandPath" Foreground="{TemplateBinding Foreground}" Height="24" Kind="ChevronDown" Opacity="0.38" RenderTransformOrigin="0.5 0.5" Width="24">
                                    <wpf:PackIcon.RenderTransform>
                                        <RotateTransform x:Name="ExpandPathRotateTransform"/>
                                    </wpf:PackIcon.RenderTransform>
                                </wpf:PackIcon>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MaterialDesignHorizontalHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" Padding="{Binding (wpf:ExpanderAssist.HorizontalHeaderPadding), RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type Expander}}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="ExpanderHeader" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" VerticalAlignment="Center"/>
                            <ToggleButton x:Name="ExpanderButton" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" RenderTransformOrigin="0.5 0.5" VerticalAlignment="Center">
                                <ToggleButton.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignExpanderToggleButton}" TargetType="{x:Type ToggleButton}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type Expander}}}" Value="Up">
                                                <Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="180"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding (wpf:ExpanderAssist.ExpanderButtonPosition), RelativeSource={RelativeSource AncestorType={x:Type Expander}, Mode=FindAncestor}}" Value="Start">
                            <Setter Property="Grid.Column" TargetName="ExpanderButton" Value="0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding (wpf:ExpanderAssist.ExpanderButtonPosition), RelativeSource={RelativeSource AncestorType={x:Type Expander}, Mode=FindAncestor}}" Value="End">
                            <Setter Property="Grid.Column" TargetName="ExpanderButton" Value="2"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding (wpf:ExpanderAssist.ExpanderButtonPosition), RelativeSource={RelativeSource AncestorType={x:Type Expander}, Mode=FindAncestor}}" Value="Default">
                            <Setter Property="Grid.Column" TargetName="ExpanderButton" Value="2"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="MaterialDesignVerticalHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" Padding="{Binding (wpf:ExpanderAssist.VerticalHeaderPadding), RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type Expander}}}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="ExpanderButton" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" RenderTransformOrigin="0.5 0.5" VerticalAlignment="Center">
                                <ToggleButton.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignExpanderToggleButton}" TargetType="{x:Type ToggleButton}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type Expander}}}" Value="Left">
                                                <Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="90"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type Expander}}}" Value="Right">
                                                <Setter Property="RenderTransform">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="-90"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <ContentPresenter ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Grid.Row="1" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding (wpf:ExpanderAssist.ExpanderButtonPosition), RelativeSource={RelativeSource AncestorType={x:Type Expander}, Mode=FindAncestor}}" Value="Start">
                            <Setter Property="Grid.Row" TargetName="ExpanderButton" Value="0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding (wpf:ExpanderAssist.ExpanderButtonPosition), RelativeSource={RelativeSource AncestorType={x:Type Expander}, Mode=FindAncestor}}" Value="End">
                            <Setter Property="Grid.Row" TargetName="ExpanderButton" Value="2"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding (wpf:ExpanderAssist.ExpanderButtonPosition), RelativeSource={RelativeSource AncestorType={x:Type Expander}, Mode=FindAncestor}}" Value="Default">
                            <Setter Property="Grid.Row" TargetName="ExpanderButton" Value="0"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    


    <ControlTemplate x:Key="ToggleButtonTemplate" TargetType="ToggleButton">
        <Border Background="{TemplateBinding Background}" Padding="5">
            <Grid>
                <ContentPresenter HorizontalAlignment="Left" />
                <TextBlock 
                    Text="⮟"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    FontSize="16"
                    RenderTransformOrigin="0.5,0.5">
                    <TextBlock.RenderTransform>
                        <RotateTransform Angle="0" />
                    </TextBlock.RenderTransform>
                </TextBlock>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="ComboBoxItemContainerStyle1" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Width" Value="360"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#FFDDDDDD"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFEEEEEE"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="#FFC3A1"/>
        <Setter Property="Height" Value="55"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Width" Value="360"/>
        <Setter Property="Padding" Value="15"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border 
                            x:Name="ComboBoxBorder"
                            Background="#ffc3a1" 
                            CornerRadius="10" 
                            Height="{TemplateBinding Height}">
                            <TextBlock 
                                IsEnabled="True"
                                Margin="11,0,25,0"
                                IsHitTestVisible="False"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                FontSize="22"
                                Text="{TemplateBinding SelectionBoxItem}">
                            </TextBlock>
                        </Border>
                        <TextBlock 
                            x:Name="TextBlock"
                            Margin="11,0,25,0"
                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Left"
                            FontSize="22"
                            Visibility="Hidden"
                            Opacity="0.5"
                            Padding="15">
                        </TextBlock>
                        <ToggleButton x:Name="ToggleButton"
                              Template="{DynamicResource MyToggleButtonTemplate}"
                              ClickMode="Press"
                              Focusable="False"
                              Grid.Column="2"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center"></ToggleButton>

                        <Popup 
                            x:Name="Popup"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            Placement="right"
                            Width="auto"
                            HorizontalOffset="-200"
                            VerticalOffset="50"
                            PopupAnimation="Slide">
                            <Border 
                                x:Name="PopupBorder"
                                Background="White"
                                BorderBrush="#603721"
                                BorderThickness="1">
                                <ScrollViewer Margin="4">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ToggleButton" Property="IsPressed" Value="True">
                            <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="#603127"/>
                            <Setter TargetName="ComboBoxBorder" Property="BorderThickness" Value="1"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="#603127"/>
                            <Setter TargetName="ComboBoxBorder" Property="BorderThickness" Value="1"/>
                        </Trigger>
                        <Trigger Property="SelectedIndex" Value="-1">
                            <Setter TargetName="TextBlock" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="ComboBoxStyleMenu" TargetType="ComboBox">
        <!--chua co scollbar-->
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border 
                            x:Name="ComboBoxBorder"
                            Background="#ffc3a1" 
                            CornerRadius="15" 
                            Height="52">
                            <ContentPresenter 
                                IsEnabled="True"
                                Margin="11,0,25,0"
                                IsHitTestVisible="False"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                Content="{TemplateBinding SelectionBoxItem}">
                            </ContentPresenter>
                        </Border>
                        <ToggleButton x:Name="ToggleButton"
                                      Template="{DynamicResource MyToggleButtonTemplate}"
                                      ClickMode="Press"
                                      Focusable="False"
                                      Grid.Column="2"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Center"></ToggleButton>

                        <Popup 
                            x:Name="Popup"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            Placement="right"
                            Width="200"
                            HorizontalOffset="-200"
                            VerticalOffset="50"
                            PopupAnimation="Slide">
                            <Border 
                                x:Name="PopupBorder"
                                Background="White"
                                BorderBrush="#603721"
                                BorderThickness="1">
                                <ScrollViewer Margin="4">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ToggleButton" Property="IsPressed" Value="True">
                            <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="#603127"/>
                            <Setter TargetName="ComboBoxBorder" Property="BorderThickness" Value="2"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="#603127"/>
                            <Setter TargetName="ComboBoxBorder" Property="BorderThickness" Value="2"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddComboBoxStyle" TargetType="ComboBox">
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border 
                            x:Name="ComboBoxBorder"
                            Background="White" 
                            CornerRadius="5,5,0,0" 
                            BorderBrush="#603127"
                            BorderThickness="0,0,0,1"
                            Height="56">
                            <ContentPresenter 
                                IsEnabled="True"
                                Margin="11,0,25,0"
                                IsHitTestVisible="False"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                Content="{TemplateBinding SelectionBoxItem}">
                            </ContentPresenter>
                        </Border>
                        <ToggleButton x:Name="ToggleButton"
                                      Template="{DynamicResource MyToggleButtonTemplate}"
                                      ClickMode="Press"
                                      Focusable="False"
                                      Grid.Column="2"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Center"></ToggleButton>

                        <Popup 
                            x:Name="Popup"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            Placement="right"
                            Width="200"
                            HorizontalOffset="-200"
                            VerticalOffset="50"
                            PopupAnimation="Slide">
                            <Border 
                                x:Name="PopupBorder"
                                Background="White"
                                BorderBrush="#603721"
                                BorderThickness="1">
                                <ScrollViewer Margin="4">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ToggleButton" Property="IsPressed" Value="True">
                            <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="#603127"/>
                            <Setter TargetName="ComboBoxBorder" Property="BorderThickness" Value="2"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="#603127"/>
                            <Setter TargetName="ComboBoxBorder" Property="BorderThickness" Value="2"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ComboBoxSimpleStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="Width" Value="240"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Foreground" Value="#603127"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border 
                            x:Name="ComboBoxBorder"
                            Background="{TemplateBinding Background}" 
                            CornerRadius="5"
                            BorderThickness="1"
                            BorderBrush="#603127"
                            Height="{TemplateBinding Height}">
                            <TextBlock 
                                IsEnabled="True"
                                Margin="11,0,25,0"
                                IsHitTestVisible="False"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                FontSize="{TemplateBinding FontSize}"
                                Text="{TemplateBinding SelectionBoxItem}">
                            </TextBlock>
                        </Border>
                        <TextBlock 
                            x:Name="TextBlock"
                            Margin="11,0,25,0"
                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                            VerticalAlignment="Center" 
                            HorizontalAlignment="Left"
                            FontSize="{TemplateBinding FontSize}"
                            Visibility="Hidden"
                            Opacity="0.5"
                            Padding="15">
                        </TextBlock>
                        <ToggleButton x:Name="ToggleButton"
                              Template="{DynamicResource MyToggleButtonTemplate}"
                              ClickMode="Press"
                              Focusable="False"
                              Grid.Column="2"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center"></ToggleButton>
                        <Popup 
                            x:Name="Popup"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            Placement="Left"
                            Width="auto"
                            HorizontalOffset="{TemplateBinding Width}"
                            VerticalOffset="50"
                            PopupAnimation="Slide">
                            <Border 
                                x:Name="PopupBorder"
                                Background="White"
                                BorderBrush="#603721"
                                BorderThickness="1">
                                    <ScrollViewer Margin="4">
                                        <StackPanel IsItemsHost="True" />
                                    </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ToggleButton" Property="IsPressed" Value="True">
                            <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="#603127"/>
                            <Setter TargetName="ComboBoxBorder" Property="BorderThickness" Value="1"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="#603127"/>
                            <Setter TargetName="ComboBoxBorder" Property="BorderThickness" Value="1"/>
                        </Trigger>
                        <Trigger Property="SelectedIndex" Value="-1">
                            <Setter TargetName="TextBlock" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <ControlTemplate x:Key="MyToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Border Width="25" Height="25" 
                Background="Transparent"
                x:Name="ToggleBorder">
            <Path
                x:Name="ArrowIcon"
                Data="M 0 0 L 4 4 L 8 0 Z"
                Fill="Black"
                HorizontalAlignment="Center"
                VerticalAlignment="Center" />
        </Border>
    </ControlTemplate>
</ResourceDictionary>
    